:root {
    --fade-duration: 0.6s;
    --fade-timing: cubic-bezier(0.2, 0.6, 0.35, 1);
    --transition-duration: 0.2s;
    --transition-timing: cubic-bezier(0.4, 0.1, 0.3, 1);
    --text-color: rgba(255, 255, 255, 0.9);
    --text-color-secondary: rgba(255, 255, 255, 0.7);
    --theme-transition-duration: 0.5s;
    --theme-transition-timing: cubic-bezier(0.4, 0, 0.2, 1);
    
    /* Responsive sizing variables */
    --clock-size-min: 8rem;
    --clock-size-preferred: 20vw;
    --clock-size-max: 24rem;
    --date-size-min: 1.5rem;
    --date-size-preferred: 4vw;
    --date-size-max: 3rem;
    --spacing-min: 0.5rem;
    --spacing-preferred: 2vw;
    --spacing-max: 2rem;
}

/* Add these at the top, right after :root */
html {
    background: #111111; /* Dark fallback color */
    color: rgba(255, 255, 255, 0.9); /* Default text color */
    font-size: clamp(14px, 2vw, 18px);
}

/* Update body styles */
body {
    margin: 0;
    height: 100vh;
    width: 100vw;
    display: grid;
    place-items: center;
    align-content: center;
    justify-content: center;
    position: relative;
    user-select: none;
    background-size: 100% 100%;
    background-position: center;
    /* Add these properties */
    opacity: 0;
    transition: opacity 0.3s ease;
    font-family: 'Mattone', system-ui, -apple-system, sans-serif;
    overflow: hidden;
    container-type: size;
}

body.ready {
    opacity: 1;
}

/* Theme transition container */
body::before {
    content: '';
    position: fixed;
    inset: 0;
    background: inherit;
    opacity: 0;
    pointer-events: none;
    z-index: 1;
    transition: opacity var(--theme-transition-duration) var(--theme-transition-timing);
}

/* Theme gradients with fixed positioning */
.theme-background {
    position: fixed;
    inset: 0;
    opacity: 0;
    pointer-events: none;
    /* Remove transition from base class */
    will-change: opacity;
    backface-visibility: hidden;
}

/* Add a new class for enabling transitions after initial load */
.theme-background.transitions-enabled {
    transition: opacity var(--theme-transition-duration) var(--theme-transition-timing);
}

/* Keep the active class as is */
.theme-background.active {
    opacity: 1;
}

/* Define gradients as separate backgrounds */
.theme-background.graphite {
    background: radial-gradient(ellipse at center, #2a2a2a 0%, #1a1a1a 50%, #0a0a0a 100%);
}

.theme-background.sunrise {
    background: radial-gradient(ellipse at bottom, #ff7b7b 0%, #ff9a56 25%, #ffad56 50%, #87ceeb 75%, #4682b4 100%);
}

.theme-background.horizon {
    background: radial-gradient(ellipse at center, #ff6b6b 0%, #ffa726 30%, #42a5f5 70%, #1e3a8a 100%);
}

.theme-background.twilight {
    background: radial-gradient(ellipse at top, #667eea 0%, #764ba2 50%, #2c1810 100%);
}

.theme-background.midnight {
    background: radial-gradient(ellipse at center, #232526 0%, #414345 50%, #0f0f23 100%);
}

.theme-background.aurora {
    background: radial-gradient(ellipse at center, #00c9ff 0%, #92fe9d 30%, #ff758c 60%, #ff7eb3 100%);
}

.theme-background.pacific {
    background: radial-gradient(ellipse at center, #667db6 0%, #0082c8 50%, #0052a3 100%);
}

.theme-background.sierra {
    background: radial-gradient(ellipse at center, #8B5A3C 0%, #5D4037 40%, #3E2723 80%, #1A0E0A 100%);
}

.theme-background.rose {
    background: radial-gradient(ellipse at center, #ff9a9e 0%, #fecfef 50%, #fecfef 100%);
}

.theme-background.forest {
    background: radial-gradient(ellipse at center, #134e5e 0%, #71b280 50%, #2d5016 100%);
}

.theme-background.ocean {
    background: radial-gradient(ellipse at center, #74b9ff 0%, #0984e3 50%, #2d3436 100%);
}

.theme-background.desert {
    background: radial-gradient(ellipse at center, #ffeaa7 0%, #fdcb6e 40%, #e17055 80%, #2d3436 100%);
}

.theme-background.lavender {
    background: radial-gradient(ellipse at center, #a29bfe 0%, #6c5ce7 50%, #2d3436 100%);
}

.theme-background.mint {
    background: radial-gradient(ellipse at center, #00cec9 0%, #55a3ff 50%, #2d3436 100%);
}

.theme-background.dynamic {
    background: radial-gradient(ellipse at center, #2a2a2a 0%, #1a1a1a 50%, #0a0a0a 100%);
}

/* Ensure clock container stays above backgrounds */
.clock-container {
    display: grid;
    place-items: center;
    gap: clamp(var(--spacing-min), var(--spacing-preferred), var(--spacing-max));
    position: relative;
    z-index: 2;
    transition: gap var(--transition-duration) var(--transition-timing);
    container-type: inline-size;
    padding: 0;
    max-width: 100vw;
    max-height: 100vh;
    box-sizing: border-box;
    justify-self: center;
    align-self: center;
    width: 100%;
    height: 100%;
    justify-content: center;
    align-content: center;
}

.date-container {
    color: var(--text-color-secondary);
    font-size: clamp(var(--date-size-min), var(--date-size-preferred), var(--date-size-max));
    text-align: center;
    letter-spacing: 0.05em;
    font-weight: 500;
    text-transform: uppercase;
    transition: all var(--transition-duration) var(--transition-timing);
    display: flex;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
    gap: clamp(0.5rem, 2vw, 1rem);
    line-height: 1.2;
    white-space: nowrap;
}

.date-container .day,
.date-container .date {
    white-space: nowrap;
}

/* Container queries for responsive layout */
@container (max-width: 400px) {
    .clock-container {
        gap: clamp(0.5rem, 2vw, 1rem);
        padding: 0;
    }
    
    .date-container {
        gap: clamp(0.25rem, 1vw, 0.5rem);
        font-size: clamp(1rem, 3vw, 1.5rem);
    }
    
    .time {
        font-size: clamp(4rem, 15vw, 8rem);
        line-height: 0.9;
    }
    
    .ampm {
        font-size: clamp(1rem, 3vw, 2.5rem);
    }
}

@container (min-width: 800px) {
    .clock-container {
        gap: clamp(2rem, 4vw, 3rem);
    }
}

/* Additional responsive adjustments for better centering */
@media (max-height: 600px) {
    .clock-container {
        gap: clamp(0.5rem, 1.5vw, 1.5rem);
        padding: 0;
    }
}

@media (min-height: 900px) {
    .clock-container {
        gap: clamp(2rem, 5vw, 4rem);
    }
}

/* Animations */
.fade-in {
    opacity: 0;
    transform: scale(0.98);
    filter: blur(10px);
    animation: fadeIn var(--fade-duration) var(--fade-timing) forwards;
}

@keyframes fadeIn {
    from { opacity: 0; transform: scale(0.96); filter: blur(10px); }
    to { opacity: 1; transform: scale(1); filter: blur(0); }
}

/* Time display */
.time {
    font-size: clamp(var(--clock-size-min), var(--clock-size-preferred), var(--clock-size-max));
    font-weight: 200;
    text-align: center;
    letter-spacing: -0.02em;
    line-height: 1;
    color: var(--text-color);
    display: flex;
    align-items: baseline;
    justify-content: center;
    flex-wrap: nowrap;
    gap: clamp(0.25rem, 1vw, 0.5rem);
    transition: all var(--transition-duration) var(--transition-timing);
    white-space: nowrap;
}

.time-main {
    transition: all var(--transition-duration) var(--transition-timing);
    opacity: 0;
    visibility: hidden;
    transform: translateY(20px);
}

.time-main.visible {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
}

.ampm {
    font-size: clamp(1.5rem, 4vw, 4rem);
    font-weight: 300;
    opacity: 0;
    visibility: hidden;
    transform: translateX(-20px);
    transition: all var(--transition-duration) var(--transition-timing);
    width: 0;
    overflow: hidden;
    color: var(--text-color);
    flex-shrink: 0;
    align-self: baseline;
}

.ampm.visible {
    opacity: 1;
    visibility: visible;
    transform: translateX(0);
    width: auto;
}

/* Grain effect */
.grain {
    position: absolute;
    inset: 0;
    z-index: 1;
    filter: url(#grainFilter);
    opacity: 0;
    pointer-events: none;
    will-change: opacity, transform, filter;
    display: none;
}

.grain.visible {
    display: block;
    animation: fadeInGrain var(--fade-duration) var(--fade-timing) forwards;
}

@keyframes fadeInGrain {
    from { 
        opacity: 0; 
        transform: scale(0.98); 
        filter: url(#grainFilter) blur(8px); 
    }
    to { 
        opacity: 0.25; 
        transform: scale(1); 
        filter: url(#grainFilter) blur(0); 
    }
}

/* Clock container and date */
.clock-container {
    display: grid;
    place-items: center;
    gap: clamp(var(--spacing-min), var(--spacing-preferred), var(--spacing-max));
    position: relative;
    z-index: 2;
    transition: gap var(--transition-duration) var(--transition-timing);
    container-type: inline-size;
    padding: 0;
    max-width: 100vw;
    max-height: 100vh;
    box-sizing: border-box;
}

.date-container {
    color: var(--text-color-secondary);
    font-size: clamp(var(--date-size-min), var(--date-size-preferred), var(--date-size-max));
    text-align: center;
    letter-spacing: 0.05em;
    font-weight: 500;
    text-transform: uppercase;
    transition: all var(--transition-duration) var(--transition-timing);
    display: flex;
    flex-wrap: nowrap;
    justify-content: center;
    gap: clamp(0.5rem, 2vw, 1rem);
}

.date-container .day,
.date-container .date {
    white-space: nowrap;
}

/* Animation disabled states */
.animations-disabled .fade-in,
.animations-disabled .analog-hand,
.animations-disabled .time,
.animations-disabled .time-main,
.animations-disabled .ampm,
.animations-disabled .date-container {
    transition: none !important;
    animation: none !important;
}

.animations-disabled .analog-clock {
    opacity: 1 !important;
    transform: none !important;
    filter: none !important;
}

/* Analog clock */
.analog-clock {
    width: clamp(200px, 30vmin, 300px);
    height: clamp(200px, 30vmin, 300px);
    border: clamp(2px, 0.3vmin, 3px) solid var(--text-color-secondary);
    border-radius: 50%;
    position: relative;
    display: none;
    background: rgba(255, 255, 255, 0.05);
    box-shadow: 0 0 30px rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(5px);
    transition: all var(--transition-duration) var(--transition-timing);
}

.analog-clock::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: clamp(8px, 1.2vmin, 12px);
    height: clamp(8px, 1.2vmin, 12px);
    background: var(--text-color);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    z-index: 3;
}

.analog-hand {
    position: absolute;
    background: var(--text-color);
    transform-origin: bottom center;
    border-radius: clamp(1px, 0.1vmin, 2px);
    transition: transform var(--transition-duration) var(--transition-timing);
}

.hour-hand {
    width: clamp(3px, 0.4vmin, 4px);
    height: 25%;
    top: 25%;
    left: 50%;
    margin-left: calc(-1 * clamp(1.5px, 0.2vmin, 2px));
}

.minute-hand {
    width: clamp(2px, 0.3vmin, 3px);
    height: 35%;
    top: 15%;
    left: 50%;
    margin-left: calc(-1 * clamp(1px, 0.15vmin, 1.5px));
}

.second-hand {
    width: 1px;
    height: 40%;
    top: 10%;
    left: 50%;
    margin-left: -0.5px;
    background: #ff4757;
}

.hour-marker {
    position: absolute;
    width: clamp(2px, 0.3vmin, 3px);
    height: clamp(15px, 2vmin, 20px);
    background: var(--text-color-secondary);
    top: clamp(5px, 1vmin, 10px);
    left: 50%;
    margin-left: calc(-1 * clamp(1px, 0.15vmin, 1.5px));
    transform-origin: center calc(clamp(200px, 30vmin, 300px) / 2 - clamp(5px, 1vmin, 10px));
}

/* Debug and test buttons */
.debug-controls {
    position: fixed;
    bottom: clamp(10px, 2vw, 20px);
    left: clamp(10px, 2vw, 20px);
    display: flex;
    flex-direction: column;
    gap: clamp(5px, 1vw, 10px);
    z-index: 1000;
    opacity: 0.7;
    transition: opacity 0.3s ease;
}

.debug-controls:hover {
    opacity: 1;
}

.debug-button {
    padding: clamp(4px, 1vw, 8px) clamp(8px, 2vw, 12px);
    background: rgba(0, 0, 0, 0.8);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 4px;
    font-size: clamp(10px, 2vw, 12px);
    cursor: pointer;
    transition: all 0.2s ease;
}

.debug-button:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.5);
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    :root {
        --text-color: rgba(255, 255, 255, 1);
        --text-color-secondary: rgba(255, 255, 255, 0.9);
    }
    
    .analog-clock {
        border-width: 3px;
        background: rgba(0, 0, 0, 0.8);
    }
}

/* Print styles */
@media print {
    body {
        background: white !important;
        color: black !important;
    }
    
    .theme-background {
        display: none !important;
    }
    
    .grain {
        display: none !important;
    }
}

/* Focus management for accessibility */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* Language-specific font handling */
body.lang-ja {
    font-family: 'Mattone', 'Hiragino Sans', 'Hiragino Kaku Gothic ProN', 'Yu Gothic', 'Meiryo', sans-serif;
}

body.lang-ko {
    font-family: 'Mattone', 'Apple SD Gothic Neo', 'Malgun Gothic', 'Nanum Gothic', sans-serif;
}

body.lang-zh {
    font-family: 'Mattone', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', sans-serif;
}

body.lang-zh-TW {
    font-family: 'Mattone', 'PingFang TC', 'Hiragino Sans CNS', 'Microsoft JhengHei', sans-serif;
}

body.lang-hi {
    font-family: 'Mattone', 'Noto Sans Devanagari', 'Mangal', 'Kokila', sans-serif;
}

/* Ensure CJK characters display properly in clock */
body.lang-ja .time-main,
body.lang-ko .time-main,
body.lang-zh .time-main,
body.lang-zh-TW .time-main {
    letter-spacing: -0.05em;
}

/* Adjust spacing for Devanagari script */
body.lang-hi .time-main {
    letter-spacing: 0;
}

/* Ensure proper rendering of non-Latin date text */
body.lang-ja .date-container,
body.lang-ko .date-container,
body.lang-zh .date-container,
body.lang-zh-TW .date-container,
body.lang-hi .date-container {
    font-weight: 400;
}